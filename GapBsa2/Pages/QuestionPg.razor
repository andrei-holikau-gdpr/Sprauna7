@using System.Net.Http.Json
@*@inject HttpClient httpClient*@
@using Gap2.CoreBusiness
@using Gap2.Plugins.DataStore.InMemory;

@page "/Question"

<h3>Question</h3>

<MudGrid>
    <MudItem xs="12" sm="6" md="6">
        <MudPaper Elevation="2" Class="pa-4" > 
            
            <MudTable T="Question" Items="@Questions.Take(4)" Hover="true" Breakpoint="Breakpoint.Sm" @ref="mudTable"
                      RowClass="cursor-pointer" RowClassFunc="@SelectedRowClassFunc" OnRowClick="RowClickEvent">
                <HeaderContent>
                    <MudTh>Id</MudTh>
                    <MudTh>NotionId</MudTh>
                    <MudTh>Name</MudTh>

                    <MudTh>Question type</MudTh>
                    <MudTh>Answers Count</MudTh>

                    <MudTh>Position</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Id">          @context.Id</MudTd>
                    <MudTd DataLabel="NotionId">    @context.NotionId</MudTd>
                    <MudTd DataLabel="Name">        @context.Name</MudTd>
                    <MudTd DataLabel="QuestionType">@*@context.QuestionType.Name*@</MudTd>
                    <MudTd DataLabel="Answers Coun">@*@context.Answers.Count()*@</MudTd>

                    <MudTd DataLabel="Position">@context.Position</MudTd>
                </RowTemplate>
            </MudTable>

        </MudPaper>
    </MudItem>
    <MudItem xs="12" sm="6" md="6">
        <MudPaper Elevation="2" Class="pa-4" >
            
            <MudExpansionPanels Style="flex: 1;">
                <MudExpansionPanel Text="Show inline-clicked event log">
                    @foreach (var message in clickedEvents)
                    {
                        <MudText>@message</MudText>                        
                    }
                    @if (clickedEvents.Count > 0)
                    {
                        <div class="d-flex">
                            <MudSpacer />
                            <MudButton Class="mt-3" ButtonType="ButtonType.Button" Variant="Variant.Filled" OnClick="@(() => clickedEvents.Clear())">Clear events</MudButton>
                        </div>
                    }
                </MudExpansionPanel>
            </MudExpansionPanels>



        </MudPaper>
    </MudItem>
</MudGrid>




@code {
    #region private fields
    TestDataGenerator testDataGenerator;
    IEnumerable<Question> Questions;

    private int selectedRowNumber = -1;
    private MudTable<Question> mudTable;
    private List<string> clickedEvents = new();
    #endregion
    #region protected override
    protected override void OnInitialized()
    {
        TestDataGenerator testDataGenerator = new TestDataGenerator();
        Questions = testDataGenerator.GenerateQuestions();
    }
    #endregion
    #region private methods
    private void RowClickEvent(TableRowClickEventArgs<Question> tableRowClickEventArgs)
    {
        clickedEvents.Add("---");
        clickedEvents.Add("Row has been clicked");
    }

    private string SelectedRowClassFunc(Question element, int rowNumber)
    {
        if (selectedRowNumber == rowNumber)
        {
            selectedRowNumber = -1;
            clickedEvents.Add("Selected Row: None");
            return string.Empty;
        }
        else if (mudTable.SelectedItem != null && mudTable.SelectedItem.Equals(element))
        {
            selectedRowNumber = rowNumber;
            clickedEvents.Add($"Selected Row: {rowNumber}");
            return "selected";
        }
        else
        {
            return string.Empty;
        }
    }
    #endregion
}