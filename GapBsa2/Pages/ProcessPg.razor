<h3>ProcessPg</h3>

@using System.Net.Http.Json
@*@inject HttpClient httpClient*@
@using Gap2.CoreBusiness
@using Gap2.Plugins.DataStore.InMemory;

@page "/Process"

<h3>Answer</h3>

<MudTable T="Process" Items="@Processes.Take(4)" Hover="true" Breakpoint="Breakpoint.Sm" @ref="mudTable" RowClass="cursor-pointer" RowClassFunc="@SelectedRowClassFunc" OnRowClick="RowClickEvent">
    <HeaderContent>
        <MudTh>Id</MudTh>
        <MudTh>Name</MudTh>
        <MudTh>Image</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Id">@context.Id</MudTd>
        <MudTd DataLabel="Name">@context.Name</MudTd>
        <MudTd DataLabel="Image">
            @if (@context?.Image != null)
            {
                <MudImage Src="@context.Image.FileName" Alt="@context.Image.Alt" Elevation="25" Class="rounded-lg" />
            }
        </MudTd>
    </RowTemplate>
</MudTable>
<MudExpansionPanels Style="flex: 1;">
    <MudExpansionPanel Text="Show inline-clicked event log">
        @foreach (var message in clickedEvents)
        {
            <MudText>@message</MudText>
        }
        @if (clickedEvents.Count > 0)
        {
            <div class="d-flex">
                <MudSpacer />
                <MudButton Class="mt-3" ButtonType="ButtonType.Button" Variant="Variant.Filled" OnClick="@(() => clickedEvents.Clear())">Clear events</MudButton>
            </div>
        }
    </MudExpansionPanel>
</MudExpansionPanels>

@code {
    #region private fields
    TestDataGenerator testDataGenerator;
    IEnumerable<Process> Processes;

    private int selectedRowNumber = -1;
    private MudTable<Process> mudTable;
    private List<string> clickedEvents = new();
    #endregion
    #region protected override
    protected override void OnInitialized()
    {
        TestDataGenerator testDataGenerator = new TestDataGenerator();
        Processes = testDataGenerator.GenerateProcesses();
    }
    #endregion
    #region private methods
    private void RowClickEvent(TableRowClickEventArgs<Process> tableRowClickEventArgs)
    {
        clickedEvents.Add("Row has been clicked");
    }

    private string SelectedRowClassFunc(Process element, int rowNumber)
    {
        if (selectedRowNumber == rowNumber)
        {
            selectedRowNumber = -1;
            clickedEvents.Add("Selected Row: None");
            return string.Empty;
        }
        else if (mudTable.SelectedItem != null && mudTable.SelectedItem.Equals(element))
        {
            selectedRowNumber = rowNumber;
            clickedEvents.Add($"Selected Row: {rowNumber}");
            return "selected";
        }
        else
        {
            return string.Empty;
        }
    }
    #endregion
}