@inject NavigationManager NavigationManager
@inject IViewProductsSpUseCase ViewProductsSpUseCase

<h2 class="card-title h5">
    <NavLink class="nav-link" href="productssp">
        <span class="oi oi-list-rich" aria-hidden="true"></span> Товары (@productsSp.Count)
    </NavLink>
</h2>

@if (productsSp != null)
{
    <div class="table-responsive">

        <table class="table table-striped table-hover sp-table">
            <tbody>
                @foreach (var item in productsSp)
                {
                    <tr @onclick="@( () => OnSelectedCallback.InvokeAsync( item.ProductSpId ))">
                        <td class="align-middle">
                            <div class="overflow-auto">
                                @item.ProductSpId
                                @*@onclick="@( () => selectProductSpId=item.ProductSpId )"*@
                            </div>
                        </td>

                        <td class="align-middle">
                            @item.ProductTypeAndBrand
                            <div style="display:none">@(++iMiniCount)</div>
                        </td>
                    </tr>
                    @*@if (MaxCountItems > 0 && iMiniCount > 1) break;*@
                }

            </tbody>
        </table>
    </div>
}

<hr />
@if (selectProductSpId > 0)
{
    <i>selectProductSpId: @selectProductSpId</i>
    <hr />
}

@code {

    #region Parameters

    [Parameter]
    public int MaxCountItems { get; set; } = 0;

    [Parameter]
    public EventCallback OnSelectedCallback { get; set; }

    #endregion

    #region private fields

    private List<ProductSp> productsSp = new List<ProductSp>();
    private int selectProductSpId = 0;
    public int iMiniCount { get; set; }

    #endregion

    async Task OnSelected()
    {
        await OnSelectedCallback.InvokeAsync(selectProductSpId);
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        LoadAll();
    }

    #region private methods

    private void LoadAll()
    {
        IEnumerable<ProductSp>? iProductsSp = ViewProductsSpUseCase.Execute();
        
        if (iProductsSp != null)
        {
            productsSp = iProductsSp.ToList();
        }
    }

    #endregion
}
